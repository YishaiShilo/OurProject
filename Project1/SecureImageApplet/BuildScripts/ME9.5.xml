<?xml version="1.0" encoding="UTF-8"?>


<!-- 
	NOTE: 
		This is an auto generated file. 
		It will be re-created upon each build in the SDK. 
		Please do not assume that this file will remain unchanged. 
-->
<project name="DAL Build" default="postBuild" basedir=".">
	<!-- The name of the project (Eclipse) -->
	<property name="project_name" 						value="SecureImageApplet"/>
	<!-- The name of the package -->
	<property name="app_package_name" 					value="SecureImageApplet"/>
	<!-- The name of the main class-->
	<property name="app_main_class_name" 				value="SecureImageApplet"/>
	<!-- The fully qualified package name of the main class  -->
	<property name="app_package_and_class_name" 		value="SecureImageApplet.SecureImageApplet"/>
	<!-- The build directory - note that the .jeff and .pack files of this directory will be deleted -->
	<property name="bin_dir" 							location="C:\Project\OurProject\Project1\SecureImageApplet\bin\ME9.5"/>
	<!-- Project directory -->
	<property name="project_dir" 						value="C:/Project/OurProject/Project1/SecureImageApplet"/>
	<!-- DAL SDK directory -->
	<property name="sdk_dir" 							value="C:\DALsdk"/> 
	<!-- value indicating if this is a compilation for signing -->
	<property name="signingFlag"						value="false"/>
	<!-- Location of the dev tools -->
	<property name="tools_location" 					value="${sdk_dir}\Platforms\ME9.5\PlatformTools"/> 
	<!-- Location of the pack tool -->
	<property name="pack_tool" 						value="${sdk_dir}\Tools\PackTool\PackTool.exe"/>
	<!-- Location of the jeffc jar-->
	<property name="jeffc" 								value="${tools_location}\jeffc.jar"/> 
	<!-- Set to true if debug mode, false otherwise -->
	<property name="debug" 								value="false"/>
	<!-- The suffix of the dalp file if in debug mode -->
	<property name="debug_output_suffix" 				value="-debug"/>	
	<!-- Path to the  applet's  manifest  file (include path and file name) -->
	<property name="manifest" location="${project_dir}\Manifests\ME9.5.DALManifest"/>
	<!-- Path to the  jeff file -->
	<property name="jeff_output_file" value="${bin_dir}\${project_name}_ME9.5.jeff"/>
	<!-- Path to the pack file -->
	<property name="pack_output_file" value="${bin_dir}\${project_name}_ME9.5.pack"/>
	<!-- Path to the proguard jar file -->
	<property name="jar_output_file" value="${bin_dir}\${project_name}_ME9.5.jar"/>
	<!-- Additional platform dependent parameters -->
	<property name="jeff_additional_parameters" value=""/>
	
	<!--Set the debug property if needed-->
	<target name="setProps">	
		 <condition property="isDebug" value="true">
			<equals arg1="${debug}" arg2="true"/>
		  </condition>
	</target>
	
	<!--Runs if the debug property was setted, sets up the values to use in building for debug-->
	<target name="setDebug" if="isDebug"  depends="setProps">
			<echo level="info">Building for Debug</echo>
			<property name="dalp_debug_option" value="${debug_output_suffix}"/>
			<property name="jeff_debug_option" value="-g"/>
	</target>

	<!--Runs if the debug property was not setted, sets up the values to use in building for release-->
	<target name="setNotDebug" unless="isDebug"  depends="setProps">
			<echo level="info">Building for Release</echo>
			<property name="dalp_debug_option" value=""/>
			<property name="jeff_debug_option" value=""/>
	</target>

	<!--Set the signing flag property if needed-->
	<target name="setSigningFlag">	
		 <condition property="isSigning" value="true">
			<equals arg1="${signingFlag}" arg2="true"/>
		  </condition>
	</target>
	
	<!--Runs if the signing property was setted, sets up the values to use in building the pack file-->
	<target name="setSigning" if="isSigning"  depends="setSigningFlag">
			<echo level="info">Building for signing</echo>
			<property name="signing_option" value="-signing"/>
	</target>	
	
	<!--Runs if the signing property was not setted, sets up the values to use in building the pack file-->
		<target name="setNotSigning" unless="isSigning"  depends="setSigningFlag">
				<property name="signing_option" value=""/>
		</target>
	
	<target name="preBuild" depends="setDebug, setNotDebug,setNotSigning, setSigning">
		<!-- Delete all the existing output files. -->
		<delete>
			<fileset dir="${bin_dir}" includes="**/*.pack"/>
			<fileset dir="${bin_dir}" includes="**/*.jeff"/>
		</delete>

		
		<!-- Echo all the relevant information. -->
		<echo level="info">Manifest file: ${manifest}</echo>
		<echo level="info">Jeff file: ${jeff_output_file}</echo>
		<echo level="info">Pack file: ${pack_output_file}</echo>
	</target>

	
	<!-- Builds a .jeff file from the project class files. -->
	<target name="jeffFile" depends="preBuild">
		<java jar="${jeffc}" fork="true" failonerror="true">
			<arg line="--serviceMain ${app_package_and_class_name} ${jeff_additional_parameters} -o '${jeff_output_file}' ${jeff_debug_option} '${jar_output_file}'" />
		</java>
		<echo level="info">${jeff_additional_parameters}</echo>
		<echo level="info">Jeff file successfully created.</echo>
	</target>
	
	<!-- Signs the jeff file and produces a pack file. -->
	<target name="packFile" depends="jeffFile">
		<exec executable="${pack_tool}" failonerror="true">	
			<arg line="Pack -jeff '${jeff_output_file}' -conf '${manifest}' -out '${pack_output_file}' '${signing_option}'"/>
		</exec>		
		<echo level="info">Pack file successfully created.</echo>
	</target>
	
	<!-- Post-build step. -->
	<target name="postBuild" depends="packFile">
		<echo level="info">Build process finished successfully.</echo>
	</target>
	
</project>
